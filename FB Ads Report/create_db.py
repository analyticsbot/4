import os
import sys
from sqlalchemy import Column, ForeignKey, Integer, String, Boolean
from sqlalchemy.ext.declarative import declarative_base
from sqlalchemy.orm import relationship
from sqlalchemy import create_engine
from sqlalchemy.dialects.postgresql import ARRAY

Base = declarative_base()

class Experiments(Base):
    __tablename__ = 'exp'
    # Here we define columns for the table person
    # Notice that each column is also a normal Python instance attribute.
    id = Column(Integer, primary_key=True)
    date_start  = Column(String(10485760), nullable=True)
    date_stop  = Column(String(10485760), nullable=True)
    account_id  = Column(String(10485760), nullable=True)
    account_name  = Column(String(10485760), nullable=True)
    ad_id  = Column(String(10485760), nullable=True)
    ad_name  = Column(String(10485760), nullable=True)
    buying_type  = Column(String(10485760), nullable=True)
    campaign_id  = Column(String(10485760), nullable=True)
    campaign_name  = Column(String(10485760), nullable=True)
    adset_id  = Column(String(10485760), nullable=True)
    adset_name  = Column(String(10485760), nullable=True)
    objective  = Column(String(10485760), nullable=True)
    actions  = Column(String(10485760), nullable=True)
    unique_actions  = Column(String(10485760), nullable=True)
    total_actions  = Column(String(10485760), nullable=True)
    total_unique_actions  = Column(String(10485760), nullable=True)
    action_values  = Column(String(10485760), nullable=True)
    total_action_value  = Column(String(10485760), nullable=True)
    impressions  = Column(String(10485760), nullable=True)
    social_impressions  = Column(String(10485760), nullable=True)
    clicks  = Column(String(10485760), nullable=True)
    social_clicks  = Column(String(10485760), nullable=True)
    unique_impressions  = Column(String(10485760), nullable=True)
    unique_social_impressions  = Column(String(10485760), nullable=True)
    unique_clicks  = Column(String(10485760), nullable=True)
    unique_social_clicks  = Column(String(10485760), nullable=True)
    spend  = Column(String(10485760), nullable=True)
    frequency  = Column(String(10485760), nullable=True)
    social_spend  = Column(String(10485760), nullable=True)
    deeplink_clicks  = Column(String(10485760), nullable=True)
    app_store_clicks  = Column(String(10485760), nullable=True)
    website_clicks  = Column(String(10485760), nullable=True)
    cost_per_inline_post_engagement  = Column(String(10485760), nullable=True)
    inline_link_clicks  = Column(String(10485760), nullable=True)
    cost_per_inline_link_click  = Column(String(10485760), nullable=True)
    inline_post_engagement  = Column(String(10485760), nullable=True)
    unique_inline_link_clicks  = Column(String(10485760), nullable=True)
    cost_per_unique_inline_link_click  = Column(String(10485760), nullable=True)
    inline_link_click_ctr  = Column(String(10485760), nullable=True)
    unique_inline_link_click_ctr  = Column(String(10485760), nullable=True)
    call_to_action_clicks  = Column(String(10485760), nullable=True)
    newsfeed_avg_position  = Column(String(10485760), nullable=True)
    newsfeed_impressions  = Column(String(10485760), nullable=True)
    newsfeed_clicks  = Column(String(10485760), nullable=True)
    reach  = Column(String(10485760), nullable=True)
    social_reach  = Column(String(10485760), nullable=True)
    ctr  = Column(String(10485760), nullable=True)
    unique_ctr  = Column(String(10485760), nullable=True)
    unique_link_clicks_ctr  = Column(String(10485760), nullable=True)
    cpc  = Column(String(10485760), nullable=True)
    cpm  = Column(String(10485760), nullable=True)
    cpp  = Column(String(10485760), nullable=True)
    cost_per_total_action  = Column(String(10485760), nullable=True)
    cost_per_action_type  = Column(String(10485760), nullable=True)
    cost_per_unique_click  = Column(String(10485760), nullable=True)
    cost_per_10_sec_video_view  = Column(String(10485760), nullable=True)
    cost_per_unique_action_type  = Column(String(10485760), nullable=True)
    relevance_score  = Column(String(10485760), nullable=True)
    website_ctr  = Column(String(10485760), nullable=True)
    video_avg_sec_watched_actions  = Column(String(10485760), nullable=True)
    video_avg_pct_watched_actions  = Column(String(10485760), nullable=True)
    video_p25_watched_actions  = Column(String(10485760), nullable=True)
    video_p50_watched_actions  = Column(String(10485760), nullable=True)
    video_p75_watched_actions  = Column(String(10485760), nullable=True)
    video_p95_watched_actions  = Column(String(10485760), nullable=True)
    video_p100_watched_actions  = Column(String(10485760), nullable=True)
    video_complete_watched_actions  = Column(String(10485760), nullable=True)
    video_10_sec_watched_actions  = Column(String(10485760), nullable=True)
    video_15_sec_watched_actions  = Column(String(10485760), nullable=True)
    video_30_sec_watched_actions  = Column(String(10485760), nullable=True)
    estimated_ad_recallers  = Column(String(10485760), nullable=True)
    estimated_ad_recallers_lower_bound  = Column(String(10485760), nullable=True)
    estimated_ad_recallers_upper_bound  = Column(String(10485760), nullable=True)
    estimated_ad_recall_rate  = Column(String(10485760), nullable=True)
    estimated_ad_recall_rate_lower_bound  = Column(String(10485760), nullable=True)
    estimated_ad_recall_rate_upper_bound  = Column(String(10485760), nullable=True)
    cost_per_estimated_ad_recallers  = Column(String(10485760), nullable=True)
    canvas_avg_view_time  = Column(String(10485760), nullable=True)
    canvas_avg_view_percent  = Column(String(10485760), nullable=True)
    place_page_name  = Column(String(10485760), nullable=True)
    ad_bid_type  = Column(String(10485760), nullable=True)
    ad_bid_value  = Column(String(10485760), nullable=True)
    ad_delivery  = Column(String(10485760), nullable=True)
    adset_bid_type  = Column(String(10485760), nullable=True)
    adset_bid_valu  = Column(String(10485760), nullable=True)

class Final(Base):
    __tablename__ = 'final'
    # Here we define columns for the table person
    # Notice that each column is also a normal Python instance attribute.
    id = Column(Integer, primary_key=True)
    date_start  = Column(String(10485760), nullable=True)
    date_stop  = Column(String(10485760), nullable=True)
    account_id  = Column(String(10485760), nullable=True)
    account_name  = Column(String(10485760), nullable=True)
    ad_id  = Column(String(10485760), nullable=True)
    ad_name  = Column(String(10485760), nullable=True)
    buying_type  = Column(String(10485760), nullable=True)
    campaign_id  = Column(String(10485760), nullable=True)
    campaign_name  = Column(String(10485760), nullable=True)
    adset_id  = Column(String(10485760), nullable=True)
    adset_name  = Column(String(10485760), nullable=True)
    objective  = Column(String(10485760), nullable=True)
    actions  = Column(String(10485760), nullable=True)
    unique_actions  = Column(String(10485760), nullable=True)
    total_actions  = Column(String(10485760), nullable=True)
    total_unique_actions  = Column(String(10485760), nullable=True)
    action_values  = Column(String(10485760), nullable=True)
    total_action_value  = Column(String(10485760), nullable=True)
    impressions  = Column(String(10485760), nullable=True)
    social_impressions  = Column(String(10485760), nullable=True)
    clicks  = Column(String(10485760), nullable=True)
    social_clicks  = Column(String(10485760), nullable=True)
    unique_impressions  = Column(String(10485760), nullable=True)
    unique_social_impressions  = Column(String(10485760), nullable=True)
    unique_clicks  = Column(String(10485760), nullable=True)
    unique_social_clicks  = Column(String(10485760), nullable=True)
    spend  = Column(String(10485760), nullable=True)
    frequency  = Column(String(10485760), nullable=True)
    social_spend  = Column(String(10485760), nullable=True)
    deeplink_clicks  = Column(String(10485760), nullable=True)
    app_store_clicks  = Column(String(10485760), nullable=True)
    website_clicks  = Column(String(10485760), nullable=True)
    cost_per_inline_post_engagement  = Column(String(10485760), nullable=True)
    inline_link_clicks  = Column(String(10485760), nullable=True)
    cost_per_inline_link_click  = Column(String(10485760), nullable=True)
    inline_post_engagement  = Column(String(10485760), nullable=True)
    unique_inline_link_clicks  = Column(String(10485760), nullable=True)
    cost_per_unique_inline_link_click  = Column(String(10485760), nullable=True)
    inline_link_click_ctr  = Column(String(10485760), nullable=True)
    unique_inline_link_click_ctr  = Column(String(10485760), nullable=True)
    call_to_action_clicks  = Column(String(10485760), nullable=True)
    newsfeed_avg_position  = Column(String(10485760), nullable=True)
    newsfeed_impressions  = Column(String(10485760), nullable=True)
    newsfeed_clicks  = Column(String(10485760), nullable=True)
    reach  = Column(String(10485760), nullable=True)
    social_reach  = Column(String(10485760), nullable=True)
    ctr  = Column(String(10485760), nullable=True)
    unique_ctr  = Column(String(10485760), nullable=True)
    unique_link_clicks_ctr  = Column(String(10485760), nullable=True)
    cpc  = Column(String(10485760), nullable=True)
    cpm  = Column(String(10485760), nullable=True)
    cpp  = Column(String(10485760), nullable=True)
    cost_per_total_action  = Column(String(10485760), nullable=True)
    cost_per_action_type  = Column(String(10485760), nullable=True)
    cost_per_unique_click  = Column(String(10485760), nullable=True)
    cost_per_10_sec_video_view  = Column(String(10485760), nullable=True)
    cost_per_unique_action_type  = Column(String(10485760), nullable=True)
    relevance_score  = Column(String(10485760), nullable=True)
    website_ctr  = Column(String(10485760), nullable=True)
    video_avg_sec_watched_actions  = Column(String(10485760), nullable=True)
    video_avg_pct_watched_actions  = Column(String(10485760), nullable=True)
    video_p25_watched_actions  = Column(String(10485760), nullable=True)
    video_p50_watched_actions  = Column(String(10485760), nullable=True)
    video_p75_watched_actions  = Column(String(10485760), nullable=True)
    video_p95_watched_actions  = Column(String(10485760), nullable=True)
    video_p100_watched_actions  = Column(String(10485760), nullable=True)
    video_complete_watched_actions  = Column(String(10485760), nullable=True)
    video_10_sec_watched_actions  = Column(String(10485760), nullable=True)
    video_15_sec_watched_actions  = Column(String(10485760), nullable=True)
    video_30_sec_watched_actions  = Column(String(10485760), nullable=True)
    estimated_ad_recallers  = Column(String(10485760), nullable=True)
    estimated_ad_recallers_lower_bound  = Column(String(10485760), nullable=True)
    estimated_ad_recallers_upper_bound  = Column(String(10485760), nullable=True)
    estimated_ad_recall_rate  = Column(String(10485760), nullable=True)
    estimated_ad_recall_rate_lower_bound  = Column(String(10485760), nullable=True)
    estimated_ad_recall_rate_upper_bound  = Column(String(10485760), nullable=True)
    cost_per_estimated_ad_recallers  = Column(String(10485760), nullable=True)
    canvas_avg_view_time  = Column(String(10485760), nullable=True)
    canvas_avg_view_percent  = Column(String(10485760), nullable=True)
    place_page_name  = Column(String(10485760), nullable=True)
    ad_bid_type  = Column(String(10485760), nullable=True)
    ad_bid_value  = Column(String(10485760), nullable=True)
    ad_delivery  = Column(String(10485760), nullable=True)
    adset_bid_type  = Column(String(10485760), nullable=True)
    adset_bid_valu  = Column(String(10485760), nullable=True)

# Create an engine that stores data in the local directory's
# sqlalchemy_example.db file.
engine = create_engine('postgresql://postgres:postgres@localhost/transformair')
 
# Create all tables in the engine. This is equivalent to "Create Table"
# statements in raw SQL.
Base.metadata.create_all(engine)
